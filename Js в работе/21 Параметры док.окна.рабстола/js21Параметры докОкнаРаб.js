/* Window - окно, это сама программа с интерфейсом, через которое мы все просматриваем, он включает в себя все кнопки браузера
и тд. Если мы изменим размер окна браузера, у нас изменится window 

Screen или Экран - Это весь наш видимый монитор, даже за пределами окна. На скрин мы никак не можем повлять

Document или DOM - эта сама страница внутри окна

Далее, все параметры, которые я буду вписывать измеряются по умолчанию в Пикселях и не требует приписки - px

Бордер - это сам квадрат вокруг текста
Бадинги - это отступы от внутреннего контента до границ самого блока (квадрата) 
*/
'use strict';
let box = document.querySelector('.box');
    console.log(box);

let btn = document.querySelector("button");
    console.log(btn);
     
let width = box.clientWidth , // Это свойство, поэтому без скобок
    height = box.clientHeight; // Здесь мы получили нужны нам параметры, 
//clientWidth - это параметр ширины, только текста и без скрола.
// clientHeight - это параметр высоты, тоже только текста (картинку смотри)
console.log(width);
console.log(height); 
// Если мы работаем с какими то стилями, нужно использовать эти параметры, таким образом
// мы будем получать точные данные, тк. на них могут вляить CSS стили
// Если мы хотим получить параметры с полосами прокрутки, мы используем параметры offsetHeight и offsetWidth
// offsetWidth - охватывате и бордер и баддинг и полосу прокрутки 
// offsetHight - охватывает также, но по высоте 
// offset - значения будут соответсоватть css стилю
// но так мы получили лишь видимую часть, если хотим учитывать всю прокрутку, то используем scrollHeight и scrocllWidth (тут полоса прокрутки опять не берется во внимание)
// на практике - это небольшая потеря
// Используя эту тема, можно раскрыть весь наш скролл (но у меня нет box, я этого не увижу, но вот Код)

// btn.addEventListener('click', function() { //Это call back функция - выполнится после клика
//     box.style.width = box.scrollWidth + 'px'; // Здесь мы хотем сделать так, чтобы показать весь контент, который у нас внутри. Здесь мы установили тот параметр, который получали выше
// }); // В данном случае, все считается просто в числах, но не в px, поэтому добавляем их  
// Все эти параметры у нас работаеют только как текст. мы их не можем изменить
// Изменить мы можем только 2 параметра - scrollTop и scrollLeft (последнего просто на картинке нет, но это ширина)
//Эти параметры показывают невидимую часть, сверху или слева - то есть если мы возьмем страницу, будем крутить вниз, верхняя часть будет увеличиваться, она невидимая 

btn.addEventListener('click', function() {
    box.scrollTop = 0; //Это как раз сделает так, что если, я прокручу страницу, нажму на кнопку, scrollTop станет = 0, что автоматически кинет меня наверх страницы 
});
// добавили в css box-sizing: border-box; Мы добавили Паддинги. 

// Только параметры scrollTop и scrollLeft - изменяемые через JS - это те параметры, которые измеряют скрытую часть, например при прокрутке вниз, верхняя часть будет увеличиваться 

// Интересно, как себя ведет правиль Box sizing: border box (вписывается в css) Это правильно включает в себя высоту или ширину элетемнта, падинки и ширину самого контанта.
// теперь clienWidth включаетс в себя падинги, не помним, что не включает себя полосу прокрутки. 

// Координаты в css расчитываются иначе, чем в JS.
// left - параметр, от левой границы браузера, до левой границы элемента

// В css Left - это параметр, которые измеряет расстояние от левой границы браузера, до левой границы элемента
// right, top, buttom - это теже параметры, от края до соотв начала нашаего эелемента (сверху до верхней части элемента)

// В JS Left - также как в стилях - слевой границы браузера до левой части элемента
// а вот right - берется левая граница браузера и по ПРАВУЮ границу элемента.
// С вертикальными частями также - top от верха браузера до верха жлемента
// А Buttom - от верха браузера, до низа элемента !



// Есть метод для получения координат 
console.log(box.getBoundingClientRect().left); // Метод для получения координат. Это метод, ставим круглые скобка в конце.
// Это объкт, заключен в фигурные скобки! Поэтому, если нам нужно что то конкретное, можно поставить точку, и запросить что то конкретное


// Чтобы получить ширину нашего документа мы пишем
console.log(document.documentElement.clientWidth); //Чтобы получить ширину всей страницы. 
// documentElement, он обязателен, без него мы ничего не получим. Без него это просто список html кода
console.log(document.documentElement.clientHeight); // высота
// Эти параметры сами изменяются, тк. они находятся в наше Window, если увел. и уменьшать, то все будет работать соотв.

// Но есть свойство, Который используется гораздо чаще
console.log(document.documentElement.scrollTop); // Он показывает на сколько пикселей я ушел вниз по странице. Этот показатель изменяемый, можно уйти на любую высоту с ним

// Для перемещения по странице ессть еще 2 специфических метода.
// 1ый метод!
scrollBy(0, 200); // открываем скобки тк это метод. Здесь мы перемещаем нашу стр по координатам, относительно нашего текущего положения (x, y). Тут мы переместим нашу страницу на 200 пикселей вниз

// 2ой более используемый
scrollTo(0, 200) // Здесь также (x, y); Когда запустится эта команда, он перенесет нас в определенные координаты на нашей странице, а не просто будет нас спускать. Мы переместились вначало почти - 200 пикселей от 0


