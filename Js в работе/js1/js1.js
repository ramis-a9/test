'use strict';

//  Управление временем выполнения скриптов и Делегирование событий

// setTimeout(sayhello, 3000);  //Позволит запустить что то через какое то время. Первый аргумент - Функция, второй аргумент - задержка в милисекундах. А третий аргументы через запятую, укажется аргумент, который мы хотим использовать в нашей функции.

// let timerId = setTimeout(sayhello, 3000); // Здесь я поместил таймер в опр коробку. Так мы запишем число идентификатор. 
// clearTimeout(timerId);  // Благодаря коробки, здесь у нас больше ничего не произайдет и скрипт не сработает. Он останавливает setTimeout

// let timerId = setInterval(sayhello, 30000); //Здесь функция будет повторяться каждые 3сек.
// // clearTimeout(timerId);

// function sayhello() {
//     console.log('Hello World'); 
// };


/* Чем рекурсинвый setTimout лучше, чем setInterval ? 
Рекурсивный - когда функция вызывает саму себя. Например, функции для работы нужно
5 секунд для обращение на сервер и т.д. А мы ставим интервал 3 сек, в итоге, мы постоянно заного вызывает функцию
*/
