'use strict';

//Создать объект мы можем с помощью фигурных скобок или при помощи - new Object 
//let obj = new Object () //обычно этим методом никто не пользуется
let options = {
    width: 1024,    // любой объкт содержит пару "ключ значения" пример: банан - фрукт, лук - овощь. Так мы создаем свойства объекта
    height: 1024,
    name: 'test'
};
console.log(options.name); // тут просто обращение
options.bool = false; // добавил новое своейство, тоже самое что, если бы я в скобках добавил bool: false 
// чтобы добавлять новые свойства в течении написания кода
options.colors = { //сейчас в свойства вложим еще один объект.
    border: 'black',
    bg: 'red'
};
delete options.bool; //Здесь мы удалили свойство из объекта
console.log(options);

for (let key in options) { ////эта переменная означает каждое свойство или переменная, которая у нас есть в объекте (in и обьект). 
    console.log('Свойство ' + key + ' имеет значение' + options[key]); //Часть с квадратными скобками , тоже самое, что мы получали через точку какое то свойствао типа console.log(options.name)
}  
console.log(Object.keys(options).length); //(Кол во свойств в объекте)объжект - в принципе будем работать с объектом, keys - будем работать с его ключами(свойствами), length - кол во свойств
//также в объект можно записывать функции, это уже будут методы

// Массивы это структуры, которые содержат элементы по порядку.
//Например - Массив с адресами вкладок в браузере, набор функций, смешенный массив с разными данными

// let arr = ['first', 2, 3, 'four', 5];
// arr.pop(); //Круглые скобки - т.к. это действие!!! Удаление элемента массива с конца.
// arr.push('5'); //Добавит элемент в конец массива
// // Запушить элемент - добавить!
// arr.shift(); // Удаляет первый элемент из массива
// arr.unshift("1"); //Добавляет первый элемент в массив
// arr[99] = 99; //я тут задаю 99 элемент Массива, но остальных элементов Массива нет, они пустые. Так плохо делать, нужно придерживаться канона
// console.log(arr.length); //тут мы запросили длину массива и получим 100, хотя всего 6. Эта команда возвращает последний индекс +1.
// console.log(arr);
// for (let i = 0; i < arr.length; i++) { //Переборка массива (просто вывести на экран)
//     console.log(arr[i]); //Каждый раз когда цикл запускается, мы берем массив и в [] достукиваемся до каждого элемента массива
// }
// arr.forEach(function(item, i, mass) { //т.к это метод-какое то действие, то (). Тоже метод перебора массива. Здесь мы используем callback функцию.
// //мы берем каждый элемент из массива и применяем к нему эту функцию. Функци принимает 3 аргумента. 1 - item это каждый элемент в нашем массиве
// // i - номер нашего аргумента (здесь может быть любое название, которое я переадам). И 3 аргумент mass - сам массив, его надо назвать другим именем здесь.
// //Если нам нужны просто элементы, достаточно item. Если нужен номер каждого аргумента - вводим i. mass - этот тот массив, который мы используем.
//     console.log(i + ': ' + item + " (массив: " + mass + ')'); 
// }); 

// let mass = [1, 3, 4, 6, 7]; 

// for (let key in mass) { // метод перебора через in
//     console.log(key); //Наш массив - это объект, в консоле мы увидим - 0 1 2 3 4. Мы видим "КЛЮЧИ" значенией - порядковый номер, а не сами значения этим методом. 
// }  

// for (let key of mass) {  //Здесь мы меняем in на of. - Так мы увидим именно значения 
//     console.log(key); //Наш массив - это объект, в консоле мы увидим - 0 1 2 3 4. Мы видим "КЛЮЧИ" значенией - порядковый номер, а не сами значения этим методом. 
// }  

// let ans = prompt('', ''), //Благодаря этой конструкции, мы можем вписать массив через запиятую
//     arr = [];

// arr = ans.split(','); //split позволяет это сделать 
// console.log(arr);

// let arr = ['wdwf', 'fdfdf', 'ggg', 'fdf'],
//     i = arr.join(', '); //этот метод берет каждый элемент и вписывает его в одну строку без разделителей, но в join, мы можем вписать разделитель
// console.log(i);

let arr = ['wdwf', 'fdfdf', 'ggg', 'fdf'],
    i = arr.sort(); //этот метод поставит элементы в Алфовитном порядке
console.log(i);

let arr2 = [1, 15, 4],
    x = arr2.sort(); //этот метод цифры правильно не остсрортирует, а только смотрит на все как на строки. Видит первую цифру, ставит первым, потом смотрит на втроую цифру
console.log(x);

let arr3 = [1, 15, 4],
    y = arr3.sort(compareNumber); //Функция sort основана на алгоритмах быстрой сортировке

    function compareNumber(a,b) {  //Здесь идет ориентация на разницу между двуми элементами Массива, она или положительная, или отрицательная, и так сравниваюется каждый элемент массива.
        return a-b;
    }
console.log(arr3);
// Псевдома массив - это объект, структура которого, совпадает со структурой массива, тоже хранит элементы в индексах, но не обладает свойствами и методами полноценного массива. У них нет всех этих методов.