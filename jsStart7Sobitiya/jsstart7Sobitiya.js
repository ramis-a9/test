'use strict';

//События - это сигнал от браузера о том, что что то произашло. Это клик, двойной клик мышью, когда убираем мышку с элемента и т.д
    //..прокрутка колесика, отправка данных форме...прям все , чем занимается пользователь

//Обработчик события - это функция ,которая срабатывает, как только событие произашло. 

//Для назначения Обработчиков событий в JS у нас есть 3 способа:
    // 1) Исп астрибут HTML - она может передать нашу функцию прямо в код. (такой способ не рекомендуется исп)
        // Прописываем в код html - onclick выглядит так:
            // <button onclick="alert('Вы нажали первую кнопку')" id="btn">Нажми меня</button>
            //  Тут мы исп. сначала двойные кавычки, а потом одинарные, тк будет конфликт если и то и другое исп.
    
    // 2) Исп. свойство DOM для событий. (через js файл)
        let btn = document.getElementsByTagName("button"); //Это псведомассив всех Тэгов на сайте.
        // btn[0].onclick = function() {  //Функция, чтобы действие потом выполнялось все время , а не 1 раз.
        //     alert('Вы нажали на первую кнопку');
        // }; //но здесь, если мы их исп. - мы можем назначить только 1 функцию на 1 элемент.
        // btn[0].onclick = function() {  // А тут функция стерла первую функцию и выдает только свое действие.
            //     alert('Вы ОПЯТЬ нажали на первую кнопку');
    // 3) Правильный метод. В том Виде 
        // btn[0].addEventListener('click', function() {   //здесь 2 агрумента - 1) Событие, которое должно произайти. 2) Функция, которая активируется после.
        //     alert('Вы нажали на первую кнопку');
        //     // alert('Вы нажали опять нажали на первую кнопку'); // Тут даже без клика вышло второе действие.
        // }); 
         
        // btn[0].addEventListener('click', function() {   //здесь 2 агрумента - 1) Событие, которое должно произайти. 2) Call Back Функция, которая активируется после.
        //     // alert('Вы нажали на первую кнопку'); // Комментируем, первое, чтобы сработало другое действие, как повторное.
        //     alert('Вы нажали опять нажали на первую кнопку'); // Здесь функция не перезатерла старую, как во втором ВАРИАНТЕ.
        // });  

        // btn[0].addEventListener('mouseenter', function () {  //Событие - мышь пришла в предел элемента.
        //     alert("Вы навели на первую кнопку");
        // }); 


// Объект event или e - Если нам нужно что то проверять условием или получать доп информацию при наведение и Т.д, мы его исп. Он имеет свои методы и свойства т.к. это объект
    btn[0].addEventListener('click', function(event) {   //передали в аргумент call-back функции. Или можно просто букву - e 
        console.log('Произашло событие: ' + event.type + ' на элементе ' + event.target); // тут мы написали event.type - это свойство, которое скажет, что произашло, а event.target - (или цель) скажет, на чем именно
    }); 
    