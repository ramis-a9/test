"use strict";
//Основые объектоного программирования. Главную роль играет объект, он может в себе содержать методы и свойства, любой вид данных.
// Например - автомобиль - это объект, у него есть свои свойства - двигатель, ходовая и тд..
// Но у их потомков были разные двигатели, объемы, колеса и тд
// То есть у нас есть объект прототип с опр наобором характеристик и изменяю их немного, мы штампуем новые экзмепляры.
// Например - Прототип модельного окна, на основании которого, мы сделаем несколько новых не похожих друг на друга.
// Прототип пользовательского сайта и тд.
// ООП Это наука о том, как делать правильную архитектуру. 

// Отталавливание ошибок - помогает найти ошибку.
// Если мы хотим остановить выполнеине кода в опр. моменте именно по функциям. - Заходим в бразкер, в просмотр кода и вкладка Sourse.
// - есть такое понятие как BreakPoint-ы . (они останавливают).
// - после выставления брэйк поинтов (на цифры жмем), обновляем всю стр. Справа мы можем нажать на кнопки - старта дальше, или перескока на след Брэйкпоинт, и пропустить часть кода и смотреть результат следующией функции.
// - Call Stack - вывод всех функций, которые привели к данном результату.
// - Scope - переменные и данные, которые сейчас используются
// - Breackpoints - это те самые метки, которые мы поставили