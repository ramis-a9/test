'use strict';

// Сохранение данных на сайте без работы с серверами и базами данных. И они останутся даже после закрытия сайта
//  Технология Local Storage. Поддерживает почти все.
// Это встроенный в браузер объект. Это свойство глобального объекта window (window.localStorage)
// Этот объект уникален для каждого домена. JS Не может выходить за пределы других вкладок, с другими вкладками или с файлами на Вашем ПК
// В консоле есть вкладка Application. ТАм есть список технологий, в частности наш ЛокалСТоредж. Там все состоит из 2 поле - КЛЮЧ и ЗНАЧЕНИЕ 
// Этот объект мы исп в очень многих случаях: 1) установили настройка на сайте и при повтороном заходе все должно оставаться на места 2) Запомнить время, где пользователь остановился при просмротре видео и тд тд
// Помещается около 5 мб данных сюда

// 1) Чтобы записать что то туда:
    localStorage.setItem("number", 1)   // МОжно и window.locakStorage. Здесь мы установили ключ значение сейчас 
    // Если такой ключ уже существует, то значение просто перезапишется 

// 2) Чтобы вытянуть инфу из ключа исп комаанду:
    console.log(localStorage.getItem('number')); // Тут получили 1, то что лежит у нас в значениях ключа

// 3) УДаление ключа
    window.localStorage.removeItem("number"); // Удаляем ключ полностью со значениемм . Исполькозвал window просто так для примера

// 4) нужно очистить все хранилище ? вот это
    localStorage.clear(); //удаляем вообще все хранилище в нем 

// 5) Далее у меня там типа форма с логином и паролем + какая то кнопка на смену формы (ТИПА)
window.addEventListener("DOMContentLoaded", function() {

    // Мы хотим, чтобы когда пользователь зайдет на сайт и нажмет кнопку remember me , она осталась у него потом активной
    // let checkBox = document.getElementById('rememberMe');

    // if (localStorage.getItem('isChecked') === 'true') {  //Эту строчку мы написали после нижнего события. Ставим кавычки на тру, тк возвращается сюда именно строка
    //  checkBox.checked = true; //Теперь, когда мы обновляем страницу, чекбокс остается кажды раз (эта запись идет 2ая после события с кликом на ремебер);
    // };
    
    // checkBox.addEventListener('click', function() {
    //     localStorage.setItem('isChecked', true); //Здесь мы ставим проверку, что чекбокс был отмечен. Сейчас мы нажали, появились данные в сторедже, но чек бокс потом опять у нас пропадет. Это просто слова, тут нихрена не проверяется, а тру вообще уйдет строкой
    // });

    
    // Теперь попробуем изменять формы, галочка запомнилась и это хорошо

    // let change = document.getElementById('change'),
    //     form = document.getElementsByTagName('form')[0];
    
    // if (localStorage.setItem('bg') === 'change') { // Если в локал стородже есть такое значение, то 
    //     form.style.backgroundColor = "#FF4766"  //Тут мы меняем цвет  . ПОМНИ ЭТО 2ое по последовательности
    // }    

    // change.addEventListener('click',function() { // Это первое по последовательности. теперь при клике меняется стайл , что сверху прописан
    //     localStorage.setItem('bg', 'change');
    //     form.style.backgroundColor = "#FF4766"  // Мы добавили это действие прямо сюда, тк у нас не сработало сразу после нажатия на кнопку 
    // });
    // Объект локал стораж привязывается к определенном дому
    
    // В этот обхект мы можем написать и свои объекты для сохранения данных. Это часто исп в браузерных играх
    let person = {
        name: 'Alex',
        age: 24,
        tech: ['mobile', 'notebook']
    };
    // Сейчас мы этот наш объект будем пытаться записать в локал стородж , однако, если мы будем это делать в обычно виде, мы порсто получим надпись этого объекта
    // Нам нужно сделать Сериализацию данных, нам нужно превратить наш объект в такой формат данных, чтобы он был понятен нашему браузеру или базе данных в будущем
    // для этого переведем его в JSON
    let serializedPreson = JSON.stringify(person);
    localStorage.setItem('Alex', serializedPreson); // Вот сейчас все отобразилось верно

    //  теперь получаем его 
    console.log(JSON.parse(localStorage.getItem('Alex'))); // Мы сейчас получаем значение нужного нам объекта 
    // Таким образом можно сохранять нужные данные, без исп сложных баз
    



}); // DOMContentLoaded





